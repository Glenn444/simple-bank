# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    name: test
    env:
      DB_URL: postgres://postgres:1234@localhost:5432/simple_bank?sslmode=disable
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: simple_bank
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: golang-migrate installation
      run: curl -fsSL \
       https://raw.githubusercontent.com/pressly/goose/master/install.sh |\
       GOOSE_INSTALL=$HOME/.goose sh -s v3.5.0

    - name: Check goose
      run: goose -version
      
    - name: Run migrations
      run: make migrateup

    - name: Test
      run: make test
